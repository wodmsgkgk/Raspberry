package gpioLED1;

import java.awt.Color;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;

import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JTextField;
import javax.swing.JToggleButton;
import javax.swing.border.EmptyBorder;

import com.pi4j.io.gpio.GpioController;
import com.pi4j.io.gpio.GpioFactory;
import com.pi4j.io.gpio.GpioPinDigitalInput;
import com.pi4j.io.gpio.GpioPinDigitalOutput;
import com.pi4j.io.gpio.PinPullResistance;
import com.pi4j.io.gpio.PinState;
import com.pi4j.io.gpio.RaspiPin;
import com.pi4j.io.gpio.event.GpioPinDigitalStateChangeEvent;
import com.pi4j.io.gpio.event.GpioPinListenerDigital;

public class GpioLED1 extends JFrame implements ItemListener {
	private JPanel contentPane;
	private JTextField textField;
	private JTextField textStatus;
	private static JTextField textSwitch;
	private boolean of = true;
	
	final GpioController gpio = GpioFactory.getInstance();
	final GpioPinDigitalOutput pin = gpio.provisionDigitalOutputPin(RaspiPin.GPIO_04, "MyLED", PinState.HIGH);
	//final static GpioPinDigitalInput pin_24 = gpio.provisionDigitalInputPin(RaspiPin.GPIO_05, "MySwitch");
	
	private JToggleButton btnGpio23 = new JToggleButton("gpio23");
	
	// ���� �޼ҵ�
	public GpioLED1() {
		createGUI();
		setListener();
		try {
			ledOff();
		} catch (InterruptedException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		textSwitch.setText("Switch HIGH");
	}

	public void setListener() {
		btnGpio23.addItemListener(this);
	}

	public void createGUI() {
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		setBounds(100, 100, 450, 300);
		contentPane = new JPanel();
		contentPane.setBorder(new EmptyBorder(5, 5, 5, 5));
		setContentPane(contentPane);
		contentPane.setLayout(null);

		textField = new JTextField();
		textField.setEditable(false);
		textField.setBounds(43, 25, 116, 212);
		contentPane.add(textField);
		textField.setColumns(10);

		btnGpio23.setToolTipText("");
		btnGpio23.setBounds(161, 66, 72, 23);
		contentPane.add(btnGpio23);

		textStatus = new JTextField();
		textStatus.setForeground(Color.BLUE);
		textStatus.setBounds(245, 67, 177, 21);
		contentPane.add(textStatus);
		textStatus.setColumns(10);
		
		textSwitch = new JTextField();
		textSwitch.setBounds(245, 134, 116, 21);
		contentPane.add(textSwitch);
		textSwitch.setColumns(10);
		
		JLabel lblSwitch = new JLabel("Switch");
		lblSwitch.setBounds(171, 137, 57, 15);
		contentPane.add(lblSwitch);

		this.setVisible(true);
	}
	
	public void ledOn() throws InterruptedException{
		pin.high();
		System.out.println("---> GPIO state shuold be : ON");
	}
	
	public void ledOff() throws InterruptedException{
		pin.low();
		System.out.println("---> GPIO state shuold be : OFF");		
	}
	
	/*public static void switchIn() throws InterruptedException{
		if (pin_24.isHigh()) {
			System.out.println("---> GPIO state shuold be : ON");
		}else{
			System.out.println("---> GPIO state shuold be : OFF");			
		}
	}*/
	
	
	public static void main(String[] args) throws InterruptedException{
		new GpioLED1();
		final GpioController gpio_24 = GpioFactory.getInstance();
		
		final GpioPinDigitalInput myBtn = gpio_24.provisionDigitalInputPin(RaspiPin.GPIO_03, PinPullResistance.PULL_DOWN);
		
		myBtn.addListener(new GpioPinListenerDigital(){
			@Override
			public void handleGpioPinDigitalStateChangeEvent(GpioPinDigitalStateChangeEvent event){
				System.out.println("GPIO PIN STATE CHANGE: "+ event.getPin() + " = " + event.getState());
				if(event.getState() == PinState.LOW)textSwitch.setText("Switch LOW");
				else textSwitch.setText("Switch HIGH");
			}
		});
		
	}

	
	@Override
	public void itemStateChanged(ItemEvent e) {
		// TODO Auto-generated method stub
		if (e.getStateChange() == ItemEvent.SELECTED) {
			btnGpio23.setBackground(Color.BLUE);
			textStatus.setText("LED ON");
			try {
				ledOn();
			} catch (InterruptedException e1) {
				// TODO Auto-generated catch block
				e1.printStackTrace();
			}
		} else {
			btnGpio23.setBackground(Color.gray);
			textStatus.setText("LED OFF");
			try {
				ledOff();
			} catch (InterruptedException e1) {
				// TODO Auto-generated catch block
				e1.printStackTrace();
			}
		}
	}
}
